#!/usr/bin/env python
# sequence evaluator for fmri experiments
# Daniel M. Drucker, 2008-2010 dmd@3e.org

import sys
sys.path.append('/home/aguirre/local/lib64/python2.4/site-packages/')
import cgi
import cgitb
import re
import datetime
from numpy import *
from numpy.fft import fft,ifft
from pygments import highlight
from pygments.lexers import PythonLexer
from pygments.formatters import HtmlFormatter

cgitb.enable()

def vec2sim(vec):
    [15,21,28,36,45,55,66,78,91,105,120,136,153,171,190,210,231,253,276,300,325,351,378]
    msize=.5+.5*sqrt(1+8*vec.size)
    if msize != int(msize):
        print 'one of your similarity vectors was of incorrect length, exiting'
        sys.exit()
    m=zeros((msize,msize))
    CP=triu(ones((msize,msize)),1).nonzero()
    for tup in zip(CP[0],CP[1],vec):
        m[tup[0],tup[1]] = tup[2]
    return m + m.T

def mathrange(x):
    return max(x)-min(x)

def repmat(a,d):
    return kron(ones(d),a)

def eucsum(x):
    return sqrt(sum(x**2,axis=0))

def congrid(Signal,NewSize):
    return Signal.repeat(NewSize/Signal.shape[0],axis=0)
    
    
def mncn(m):
    m = asfarray(m)
    return m-sum(m.flatten(1))/m.size

def NormMag(Image):
    FTImage=fft(Image)
    MagImage=sqrt(FTImage * conj(FTImage))
    ZeroPoints=(MagImage==0).nonzero()[0]
    ZeroCount=ZeroPoints.size
    if ZeroCount > 0:
        MagImage[ZeroPoints]=1
    PhaseImage=arccos(real(FTImage/MagImage))
    NegVals=(imag(FTImage) < 0).nonzero()[0]
    NegCount=NegVals.size
    if NegCount > 0:
        PhaseImage[NegVals] = 2*pi - PhaseImage[NegVals]
    if ZeroCount > 0:
        PhaseImage[ZeroPoints] = 0
        MagImage[ZeroPoints] = 0
    MagImage=MagImage/max(MagImage);
    RealPart=MagImage*cos(PhaseImage);
    ImaginaryPart=MagImage*sin(PhaseImage);
    return real(ifft(RealPart + ImaginaryPart * 1j))

def mncnleavezeros(vec):
    vec = asfarray(vec)
    nonzeros = vec.nonzero()[0]
    meancentered = vec
    meancentered[nonzeros] = meancentered[nonzeros]-sum(vec[nonzeros])/nonzeros.size
    return meancentered

def ztransform(vec):
    zt = mncn(vec)
    return zt/std(zt)

def EvaluateSeqshard(par,SimMat):
    ''' Evaluate mapping of sequence labels for maximum efficiency given a set of similarity matrices.
         
          Daniel M. Drucker <ddrucker@psych.upenn.edu>
          par['N']             = N stims
          par['perms']         = how many permutations to try
          par['TrialDuration'] = length of stimulus in secs
          par['BlankLength']   = number of blanks to insert for each blank
          par['target']        = id of target '''

#    blanks = [int(x) for x in zeros(par.get('BlankLength',2))]
    blanks = [0,0]
    # hardcode t1i1 sequences
    sequences = {}
    sequences[('t1i1',6)] = array([0,1,2,3,4,5,5,1,0,4,3,2,2,4,1,5,0,3,3,0,5,2,1,4,4,0,2,5,3,1,1,3,5,4,2,0])
    sequences[('t1i1',7)] = array([0,1,2,3,4,5,6,6,1,4,0,2,5,3,3,5,2,1,6,0,4,4,2,0,6,3,1,5,5,0,3,2,6,4,1,1,0,5,4,3,6,2,2,4,6,5,1,3,0])
    sequences[('t1i1',8)] = array([0,1,2,3,4,5,6,7,7,6,0,2,1,3,5,4,4,1,5,3,2,7,0,6,6,2,0,4,3,7,5,1,1,7,4,0,5,2,6,3,3,0,7,1,6,4,2,5,5,0,3,6,1,4,7,2,2,4,6,5,7,3,1,0])
    sequences[('t1i1',9)] = array([0,1,2,3,4,5,6,7,8,8,7,3,6,5,2,1,0,4,4,6,2,5,0,3,8,1,7,7,0,5,4,1,8,3,2,6,6,8,4,0,2,7,5,3,1,1,3,7,6,4,2,0,8,5,5,7,2,8,0,6,1,4,3,3,5,1,6,0,7,4,8,2,2,4,7,1,5,8,6,3,0])
    sequences[('t1i1',10)] = array([0,1,2,3,4,5,6,7,8,9,9,7,1,3,8,4,2,0,6,5,5,7,9,6,4,3,2,1,0,8,8,5,2,4,7,0,3,6,9,1,1,5,3,7,2,8,0,9,4,6,6,8,1,9,2,5,4,0,7,3,3,0,5,9,8,2,7,6,1,4,4,8,7,5,1,6,3,9,0,2,2,6,0,4,9,5,8,3,1,7,7,4,1,8,6,2,9,3,5,0])
    sequences[('t1i1',11)] = array([0,1,2,3,4,5,6,7,8,9,10,10,0,4,1,9,3,6,8,2,5,7,7,5,9,0,2,1,3,10,4,8,6,6,9,1,7,10,8,0,3,5,4,2,2,6,10,7,0,9,5,1,8,4,3,3,1,10,5,2,7,9,6,4,0,8,8,5,0,10,6,3,2,4,9,7,1,1,4,7,6,0,5,3,8,10,2,9,9,2,8,1,6,5,10,3,0,7,4,4,10,9,8,3,7,2,0,6,1,5,5,8,7,3,9,4,6,2,10,1,0])
    sequences[('t1i1',12)] = array([0,1,2,3,4,5,6,7,8,9,10,11,11,0,9,2,5,1,3,10,6,8,4,7,7,9,11,4,8,5,10,0,2,6,3,1,1,11,2,10,3,0,4,6,9,7,5,8,8,3,9,5,0,6,10,2,11,1,7,4,4,10,1,5,2,8,11,9,0,3,7,6,6,4,0,5,7,2,1,9,3,11,8,10,10,4,9,1,0,7,11,5,3,8,6,2,2,7,10,9,4,1,8,0,11,3,6,5,5,11,7,0,10,8,2,9,6,1,4,3,3,2,4,11,6,0,8,7,1,10,5,9,9,8,1,6,11,10,7,3,5,4,2,0])
    sequences[('t1i1',13)] = array([0,1,2,3,4,5,6,7,8,9,10,11,12,12,4,6,11,5,7,9,1,0,2,8,10,3,3,6,9,8,11,7,4,2,10,0,12,1,5,5,8,7,10,12,9,2,0,4,1,6,3,11,11,6,12,10,1,4,0,8,2,7,5,3,9,9,12,0,3,2,5,1,7,11,8,6,4,10,10,4,3,7,12,11,0,6,8,1,9,5,2,2,1,10,5,0,9,4,11,3,8,12,7,6,6,5,10,8,0,11,4,9,7,2,12,3,1,1,8,3,12,6,2,9,11,10,7,0,5,4,4,7,1,11,2,6,0,10,9,3,5,12,8,8,4,12,5,9,6,10,2,11,1,3,0,7,7,3,10,6,1,12,2,4,8,5,11,9,0])
    sequences[('t1i1',14)] = array([0,1,2,3,4,5,6,7,8,9,10,11,12,13,13,6,0,7,1,4,11,2,10,8,3,5,9,12,12,3,7,2,11,4,6,5,8,13,0,10,1,9,9,8,2,7,12,10,13,5,0,11,1,3,6,4,4,9,1,8,0,2,12,5,3,10,7,6,13,11,11,13,1,10,2,9,3,8,12,7,5,4,0,6,6,1,12,2,0,3,11,7,4,10,9,13,8,5,5,10,12,11,3,13,9,0,8,1,6,2,4,7,7,9,11,5,13,3,1,0,12,4,2,8,6,10,10,0,4,1,5,7,11,6,3,9,2,13,12,8,8,7,10,5,12,6,11,9,4,3,0,13,2,1,1,11,8,4,13,10,6,9,7,3,12,0,5,2,2,5,11,0,9,6,12,1,7,13,4,8,10,3,3,2,6,8,11,10,4,12,9,5,1,13,7,0])
    sequences[('t1i1',15)] = array([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,14,7,10,0,8,2,9,1,4,3,12,5,11,6,13,13,5,10,12,14,8,4,1,0,11,2,6,3,7,9,9,14,10,7,2,4,13,0,6,5,8,12,3,1,11,11,4,2,10,13,12,6,8,0,14,5,7,1,9,3,3,9,4,8,1,5,14,6,11,0,7,13,2,12,10,10,8,3,5,0,9,2,11,14,1,13,4,7,6,12,12,0,3,13,9,5,4,11,1,6,10,14,2,8,7,7,4,6,9,0,12,1,10,2,13,3,8,14,11,5,5,2,0,13,1,3,11,7,14,4,12,8,10,9,6,6,14,9,7,11,8,5,13,10,3,0,2,1,12,4,4,10,1,14,3,6,0,5,9,8,11,13,7,12,2,2,5,12,11,10,6,1,7,3,14,0,4,9,13,8,8,13,6,4,14,12,9,11,3,2,7,0,10,5,1,1,8,6,2,14,13,11,9,12,7,5,3,10,4,0])
    sequences[('t1i1',16)] = array([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,15,3,12,11,14,2,1,7,0,10,4,6,9,8,5,13,13,0,14,8,10,12,15,7,1,4,2,11,6,3,5,9,9,11,1,6,14,3,15,13,2,8,4,0,5,7,12,10,10,13,6,15,0,2,14,9,5,1,8,3,7,11,4,12,12,9,6,0,13,7,3,10,5,2,15,14,4,8,1,11,11,15,1,5,0,12,6,8,2,9,14,7,13,4,10,3,3,8,11,13,5,4,1,9,0,6,2,10,15,12,7,14,14,0,15,4,7,2,13,1,12,5,10,9,3,6,11,8,8,15,9,12,14,10,2,4,13,11,0,7,6,5,3,1,1,0,3,13,8,14,5,12,4,11,9,2,7,15,10,6,6,12,2,5,14,13,9,4,3,0,11,10,1,15,8,7,7,4,14,11,2,6,10,0,8,13,12,1,3,9,15,5,5,11,7,9,13,3,14,6,1,10,8,12,0,4,15,2,2,12,3,11,5,8,0,9,7,10,14,1,13,15,6,4,4,9,1,14,12,8,6,13,10,7,5,15,11,3,2,0])
    sequences[('t1i1',17)] = array([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,16,6,15,4,2,5,1,12,9,7,0,3,13,8,10,14,11,11,15,2,6,13,12,14,3,0,5,4,1,16,9,8,7,10,10,3,1,13,15,9,11,16,4,6,14,5,2,0,8,12,7,7,3,5,8,11,6,0,12,15,13,4,14,1,10,9,16,2,2,9,12,16,15,6,5,14,0,11,1,7,4,10,8,13,3,3,6,16,5,10,7,9,13,11,2,12,8,0,4,15,1,14,14,2,7,6,1,8,15,10,4,11,0,13,9,5,16,3,12,12,0,7,1,15,3,8,16,11,4,13,6,2,14,10,5,9,9,14,4,0,15,5,11,3,10,13,16,7,2,8,6,12,1,1,9,15,7,5,3,11,8,14,12,2,10,16,13,0,6,4,4,3,14,16,0,10,2,11,13,7,12,6,9,1,5,15,8,8,1,11,5,7,14,9,4,16,12,3,15,0,2,13,10,6,6,8,2,4,7,15,12,11,10,1,0,9,3,16,14,13,5,5,12,10,0,16,1,4,8,3,9,2,15,14,6,11,7,13,13,1,3,2,16,8,4,12,5,0,14,7,11,9,6,10,15,15,11,14,8,5,13,2,1,6,3,7,16,10,12,4,9,0])
    sequences[('t1i1',18)] = array([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,17,5,14,12,16,1,0,9,11,4,3,15,7,2,6,8,10,13,13,2,7,9,6,14,16,5,3,17,15,8,12,0,4,1,11,10,10,16,7,0,2,4,8,15,17,9,12,6,11,1,3,14,13,5,5,0,11,15,12,17,13,1,4,6,2,8,7,14,10,3,9,16,16,6,12,9,3,10,1,5,13,4,15,11,0,17,8,2,14,7,7,10,4,0,3,16,8,5,11,2,1,6,13,17,12,14,9,15,15,5,16,12,1,7,11,3,8,13,6,0,14,4,17,10,2,9,9,13,10,5,7,6,15,14,8,17,1,16,3,0,12,4,2,11,11,5,12,7,13,15,2,17,0,6,1,8,4,16,10,9,14,3,3,11,6,16,14,1,9,5,10,0,7,17,2,15,4,13,12,8,8,14,17,16,11,7,15,9,1,10,6,4,12,3,13,0,5,2,2,5,8,0,10,12,11,9,17,6,3,1,15,13,7,16,4,14,14,2,10,17,4,9,0,16,13,11,8,3,7,1,12,5,15,6,6,9,2,12,10,8,11,14,0,13,16,15,3,5,1,17,7,4,4,11,13,3,12,2,16,9,7,5,17,14,6,10,15,0,8,1,1,13,9,8,16,2,0,15,10,14,11,17,3,6,5,4,7,12,12,15,1,14,5,9,4,10,7,3,2,13,8,6,17,11,16,0])
    sequences[('t1i1',19)] = array([1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,19,14,9,1,11,3,15,6,17,10,2,12,4,16,7,18,13,8,5,5,16,8,19,11,4,14,6,18,9,2,13,7,15,12,1,10,3,17,17,16,9,19,12,3,14,8,1,13,2,15,4,18,10,5,11,7,6,6,16,10,19,13,3,18,7,17,9,4,12,5,15,11,2,1,8,14,14,16,11,19,15,5,1,7,2,9,3,12,8,4,10,18,17,6,13,13,16,12,19,17,4,1,9,5,10,6,14,11,8,15,7,3,2,18,18,16,14,1,3,5,17,7,19,9,6,12,11,10,4,2,8,13,15,15,17,11,1,12,6,19,8,2,10,7,13,5,3,16,18,14,4,9,9,16,13,19,18,4,3,7,1,14,2,17,8,6,11,5,12,15,10,10,16,19,1,4,6,15,8,17,12,2,14,7,5,9,13,11,18,3,3,19,16,1,15,9,14,10,17,13,6,2,5,4,8,18,12,7,11,11,17,1,5,2,4,15,14,19,3,6,9,7,10,13,18,8,12,16,16,2,19,4,11,9,8,10,1,17,15,18,6,3,13,12,14,5,7,7,4,13,1,6,5,14,12,17,19,10,8,11,16,3,9,18,15,2,2,6,4,7,9,12,18,11,13,10,14,17,3,1,16,15,19,5,8,8,16,4,17,5,18,1,19,2,7,14,13,9,15,3,11,6,10,12,12,10,9,17,14,3,8,7,16,5,19,6,1,18,2,11,15,13,4,4,19,7,12,9,11,14,18,5,13,17,2,16,6,8,3,10,15,1])-1
    sequences[('t1i1',20)] = array([1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,20,6,5,12,19,7,14,1,8,15,2,9,16,3,10,17,4,11,18,13,13,18,5,14,19,6,15,20,7,16,1,9,17,2,11,3,8,12,4,10,10,18,6,12,20,8,14,2,7,15,1,11,16,4,9,19,3,13,17,5,5,18,7,13,1,6,14,20,9,15,3,11,17,8,10,16,19,4,2,12,12,18,8,13,19,9,20,1,7,17,3,14,16,2,15,5,10,4,6,11,11,19,5,13,20,10,15,4,7,18,1,12,16,6,17,9,8,3,2,14,14,18,9,13,2,6,16,20,11,15,7,10,19,12,1,4,3,5,8,17,17,19,8,18,2,10,14,3,7,20,4,12,15,6,13,5,11,1,16,9,9,18,10,13,3,6,20,2,8,16,5,15,17,7,12,11,14,4,1,19,19,18,11,20,3,12,2,1,13,4,14,5,17,16,15,8,6,10,9,7,7,19,10,20,5,16,8,1,14,17,6,18,3,15,11,2,13,12,9,4,4,18,12,17,1,15,10,2,16,14,6,8,20,13,7,5,19,11,9,3,3,18,14,13,6,19,1,20,15,9,5,2,17,10,7,11,4,16,12,8,8,19,13,16,7,9,2,4,15,14,11,5,1,10,3,20,18,17,12,6,6,1,5,20,19,15,13,9,11,7,3,16,18,4,17,14,12,10,8,2,2,18,15,19,14,8,5,7,1,17,11,13,10,12,3,9,6,4,20,16,16,10,5,3,19,2,20,17,13,15,12,14,7,4,8,11,6,9,1,18,18,20,14,9,12,5,4,13,8,7,6,2,19,16,11,10,1,3,17,15,15,18,16,13,11,8,4,19,17,20,12,7,2,5,9,14,10,6,3,1]) -1
    sequences[('t1i1',21)] = array([1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,21,16,9,17,2,10,18,3,11,19,4,12,20,5,14,1,6,15,8,7,13,13,2,9,16,3,10,17,4,11,18,5,12,19,6,14,20,7,21,1,8,15,15,2,11,16,4,9,18,6,10,19,3,12,17,5,13,20,8,21,7,1,14,14,2,12,16,5,9,19,7,10,20,3,13,17,6,11,21,8,1,4,15,18,18,2,13,16,6,9,20,4,10,21,3,14,17,7,12,1,5,15,11,8,19,19,2,14,16,7,9,21,4,13,18,8,11,1,3,15,17,12,5,10,6,20,20,2,15,19,5,11,17,3,16,1,7,14,18,9,4,6,8,12,21,13,10,10,2,16,18,4,14,19,8,13,21,5,17,20,9,1,11,6,12,7,15,3,3,2,17,16,8,14,4,7,11,20,6,13,19,9,12,18,15,1,21,10,5,5,2,18,16,10,12,3,6,17,19,11,13,1,9,14,21,20,15,7,4,8,8,2,19,16,11,10,1,12,14,3,5,18,17,9,15,21,6,4,20,13,7,7,2,20,16,12,10,3,8,17,21,9,13,4,18,14,11,5,1,19,15,6,6,2,21,17,8,10,16,13,11,3,7,18,20,14,5,4,19,1,15,12,9,9,3,1,16,14,6,18,7,19,10,4,21,2,8,5,20,17,11,15,13,12,12,4,1,17,10,13,3,18,11,2,5,21,15,9,7,20,19,14,8,6,16,16,15,4,17,14,7,3,19,12,6,21,18,10,9,2,1,13,5,8,20,11,11,4,16,19,13,15,10,8,3,9,6,5,7,17,1,20,18,21,14,12,2,2,4,3,20,12,15,14,10,7,6,1,18,13,8,16,21,11,9,5,19,17,17,15,20,1,10,14,13,9,11,7,5,16,2,6,3,21,19,18,12,8,4,4,2,7,16,20,10,15,5,3,17,13,6,19,21,12,11,14,9,8,18,1]) -1
    sequences[('t1i1',22)] = array([1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,22,2,5,4,3,6,8,7,1,9,11,10,12,14,13,15,17,16,18,20,19,21,21,6,5,7,3,2,4,1,8,20,22,18,17,19,15,14,16,12,11,13,10,9,9,6,10,4,7,2,8,1,3,5,11,18,21,16,15,19,13,12,17,14,22,20,20,6,9,4,8,2,7,5,1,10,19,18,22,16,21,14,17,12,15,13,3,11,11,6,12,4,9,2,10,1,5,3,7,19,8,16,20,14,18,13,17,22,21,15,15,6,11,4,10,2,9,1,7,21,3,19,5,16,22,14,20,13,18,12,8,17,17,6,13,4,11,2,12,1,14,21,20,3,8,18,16,5,9,7,10,15,22,19,19,6,14,4,12,2,11,1,13,21,5,20,7,17,3,16,8,10,22,9,15,18,18,6,15,4,13,2,14,1,11,21,7,22,3,9,17,5,8,12,19,10,20,16,16,6,17,4,14,2,13,1,12,21,8,22,5,15,3,10,18,9,20,11,19,7,7,6,16,4,15,2,17,1,19,3,21,9,5,22,10,8,13,11,20,12,18,14,14,6,18,4,16,2,15,1,17,21,11,3,22,8,5,13,7,9,19,12,20,10,10,6,19,4,17,2,16,1,15,21,13,5,14,3,18,7,20,8,11,9,22,12,12,6,20,4,18,2,19,1,21,17,8,14,7,11,16,9,3,13,22,15,10,5,5,10,7,4,6,2,18,1,20,9,21,19,22,11,17,15,8,3,14,12,16,13,13,6,21,4,19,2,20,1,18,5,17,9,8,15,12,10,14,11,22,7,16,3,3,12,5,18,8,4,20,2,22,13,9,16,7,15,11,14,19,17,10,21,1,6,6,22,17,7,12,3,15,9,13,20,18,10,16,14,8,19,11,5,21,2,1,4,4,22,6,3,1,16,11,8,21,10,17,13,19,14,9,12,7,18,15,20,5,2,2,6,1,22,4,21,12,9,18,3,20,17,11,15,7,14,5,19,16,10,13,8,8,6,4,2,21,18,11,7,13,16,19,9,14,10,3,17,20,15,5,12,22,1]) -1
    sequences[('t1i1',23)] = array([1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,23,19,7,1,17,11,5,22,16,10,4,21,15,9,3,20,14,8,6,2,13,12,18,18,12,6,23,17,13,7,2,16,11,4,22,15,10,3,21,14,9,5,20,1,8,19,19,12,7,23,18,11,6,22,17,10,5,21,16,9,4,20,15,8,3,1,14,13,2,2,12,8,23,20,11,7,22,18,10,6,21,17,9,14,1,15,13,4,3,5,19,16,16,12,9,23,21,11,8,22,19,10,13,1,18,14,4,2,15,17,5,7,6,20,3,3,12,10,23,22,11,13,5,16,14,7,4,15,18,8,1,19,9,2,20,17,21,6,6,12,14,2,1,11,9,22,20,10,7,21,18,13,3,23,15,19,5,4,16,8,17,17,12,15,1,3,11,10,22,21,13,8,2,18,9,7,5,14,16,20,6,19,23,4,4,12,16,1,5,11,14,23,2,10,8,21,19,13,9,6,15,20,18,3,17,22,7,7,12,17,1,4,11,15,23,3,10,9,21,20,13,16,2,14,19,6,5,8,18,22,22,12,19,1,6,11,17,2,4,10,14,21,23,9,8,20,16,13,18,7,3,15,5,5,12,20,2,6,13,11,1,16,15,7,9,17,14,10,18,21,3,19,22,4,23,8,8,12,21,1,7,11,16,23,5,10,17,3,2,9,13,20,19,14,22,6,4,18,15,15,12,22,1,9,11,18,23,16,19,8,4,17,20,7,13,6,10,21,2,5,3,14,14,12,23,1,10,15,11,2,17,16,5,9,18,20,22,3,6,8,7,19,21,4,13,13,10,1,12,2,11,20,4,19,15,14,3,22,5,23,7,18,6,17,8,16,21,9,9,15,2,7,10,12,11,3,16,18,5,17,19,4,8,13,22,14,20,23,6,1,21,21,5,2,8,10,16,7,14,17,15,6,18,4,1,22,13,19,11,23,12,3,9,20,20,5,13,15,3,18,17,4,7,16,6,9,19,2,22,8,14,11,21,12,1,23,10,10,20,12,4,14,6,16,3,7,15,22,9,1,13,21,8,5,18,2,19,17,23,11,11,19,18,16,22,10,2,21,7,17,6,3,13,23,14,5,1,20,8,15,4,9,12,12,5,15,21,10,19,3,8,11,22,2,23,13,17,7,20,9,16,4,6,14,18,1]) -1
    sequences[('t1i1',24)] = array([1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,24,2,15,22,5,12,19,3,9,16,23,6,13,20,4,10,18,1,7,14,21,8,17,11,11,8,15,23,5,13,19,2,9,17,24,6,14,20,3,10,22,1,12,16,21,7,4,18,18,8,16,22,6,12,20,2,10,17,23,7,13,21,3,11,19,24,9,15,1,5,4,14,14,8,18,22,7,12,21,2,11,16,24,10,13,23,3,15,19,1,17,4,6,9,5,20,20,8,19,22,9,12,23,2,13,17,1,6,15,21,4,11,18,24,14,3,5,10,7,16,16,8,20,22,10,12,24,3,13,18,23,9,19,4,7,11,21,1,15,2,5,17,14,6,6,8,21,23,10,14,19,5,9,20,1,11,13,22,3,12,18,2,7,15,24,16,4,17,17,8,22,24,5,14,23,4,9,21,6,10,15,20,7,19,12,1,16,2,18,13,11,3,3,8,23,22,11,14,24,4,13,1,9,6,16,20,5,15,18,7,10,19,21,17,2,12,12,8,24,22,13,16,1,3,14,18,4,15,17,20,6,19,7,2,23,21,9,11,10,5,5,11,1,22,8,13,2,4,16,3,6,17,19,9,7,18,20,24,21,10,23,14,12,15,15,9,1,23,8,12,22,2,14,17,3,7,21,5,16,10,24,13,6,18,11,4,20,19,19,10,1,24,7,17,21,11,9,22,4,12,2,6,3,18,5,23,20,14,16,13,15,8,8,10,20,9,13,24,1,4,19,17,5,7,22,21,12,14,2,16,18,6,11,15,3,23,23,11,17,22,14,1,19,6,20,18,3,21,13,4,24,12,10,16,15,5,2,8,7,9,9,14,4,22,15,6,1,8,11,20,23,13,3,2,17,12,5,18,10,21,24,19,16,7,7,20,16,5,8,14,22,12,9,23,1,18,15,4,3,24,17,13,10,2,19,11,6,21,21,15,7,23,16,6,2,20,11,5,24,18,12,17,9,3,22,19,13,8,1,14,10,4,4,21,16,9,18,17,6,5,22,20,12,3,19,14,11,7,1,10,8,2,24,23,15,13,13,12,4,1,20,17,7,5,19,8,3,16,11,24,15,10,6,23,18,21,14,9,2,22,22,16,19,18,14,13,7,24,11,23,17,10,9,8,5,3,1,21,20,15,12,6,4,2,2,21,19,23,12,7,3,17,15,11,22,18,16,14,5,1,13,9,4,8,6,24,20,10,10,3,20,13,5,21,18,9,24,8,4,23,19,15,14,7,6,22,17,16,12,11,2,1]) -1
    sequences[('t1i1',25)] = array([1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,25,12,11,19,1,7,14,21,3,10,17,24,6,13,20,2,9,16,23,5,15,22,4,8,18,18,4,11,20,25,7,15,21,5,10,19,24,8,13,22,2,12,17,1,6,14,23,3,16,9,9,4,12,18,25,8,14,22,3,11,21,1,10,13,23,2,15,19,5,7,16,20,6,24,17,17,4,13,19,2,7,18,21,6,10,20,24,9,14,25,3,12,22,1,5,23,8,11,16,15,15,4,14,19,3,7,17,21,8,10,18,24,11,13,25,2,20,1,9,5,12,23,6,16,22,22,5,11,23,1,8,15,24,3,13,17,25,6,18,20,4,9,21,2,10,12,19,14,16,7,7,4,15,20,3,8,16,21,9,11,18,1,12,14,24,2,17,5,25,10,22,19,13,6,23,23,4,16,19,6,8,17,22,7,10,21,24,12,15,25,5,9,20,11,14,18,2,13,1,3,3,5,13,21,4,7,19,22,6,11,24,1,14,17,20,8,12,16,25,9,18,10,23,15,2,2,4,17,19,25,11,15,23,7,12,21,10,6,20,22,8,24,18,3,14,9,1,13,5,16,16,4,18,22,25,13,24,5,3,17,2,1,15,6,21,7,9,19,23,11,8,20,10,14,12,12,4,19,21,11,7,20,23,9,15,1,16,6,22,10,2,18,5,24,14,3,25,17,13,8,8,4,20,19,7,11,17,23,10,16,1,18,6,25,14,2,22,9,24,15,3,21,13,12,5,5,4,21,19,8,7,22,24,10,15,18,9,12,1,11,2,16,13,3,23,25,20,17,14,6,6,4,22,20,5,8,21,12,3,18,7,1,17,16,2,11,9,25,15,14,13,10,24,23,19,19,4,23,20,7,13,16,3,6,12,25,1,21,15,5,14,8,22,18,17,11,10,9,2,24,24,4,25,19,9,7,21,23,12,20,14,1,22,15,13,11,3,2,5,18,16,8,6,17,10,10,4,24,20,9,8,23,13,7,25,21,16,5,1,19,18,11,6,3,22,17,15,12,2,14,14,5,2,21,17,7,23,22,11,25,24,13,15,9,3,20,16,18,12,6,19,10,8,1,4,4,10,1,23,14,7,24,21,18,15,11,22,13,2,25,16,12,8,3,19,17,9,6,5,20,20,12,24,22,14,11,1,25,4,2,6,9,13,18,23,17,8,19,16,10,3,15,7,5,21,21,14,4,6,15,10,25,23,18,8,2,19,11,5,17,12,9,22,16,24,7,3,1,20,13,13,4,1,24,19,12,10,7,6,2,8,5,22,21,25,18,14,20,15,17,3,9,23,16,11,11,4,3,24,16,14,10,5,19,15,8,25,22,12,7,2,23,21,20,18,13,9,17,6,1]) -1
    sequences[('t1i1',26)] = array([1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,26,16,13,24,9,20,5,17,1,12,23,8,19,4,18,2,11,22,7,21,3,14,25,15,6,10,10,2,13,25,9,21,5,16,1,14,23,11,19,6,15,26,12,22,8,18,3,20,4,17,24,7,7,2,14,24,10,20,6,16,3,12,25,8,21,4,19,1,11,23,9,18,5,22,13,17,26,15,15,2,16,24,11,20,7,17,3,13,23,10,19,5,18,26,14,22,9,25,6,1,4,12,21,8,8,2,15,24,12,20,9,16,4,13,26,10,21,6,18,1,17,22,11,25,3,23,5,19,7,14,14,2,17,25,10,22,5,20,1,15,3,8,23,4,16,26,11,24,13,18,6,21,7,19,9,12,12,2,18,24,14,20,8,16,5,15,1,9,19,10,23,3,11,26,7,22,4,21,25,17,6,13,13,2,19,24,15,20,10,16,6,12,26,8,22,14,18,4,23,1,7,25,11,3,9,5,21,17,17,2,20,24,16,21,9,22,1,18,7,10,25,4,26,3,15,23,12,19,11,5,8,14,13,6,6,2,21,24,17,20,11,16,7,13,1,8,25,5,23,26,18,22,12,3,10,15,9,4,14,19,19,2,22,24,18,20,12,16,8,15,4,9,23,6,25,1,21,10,7,26,13,3,5,14,17,11,11,2,23,25,12,24,5,26,1,16,9,8,20,13,19,3,18,10,14,21,15,22,17,7,6,4,4,2,24,26,17,5,7,16,10,13,8,11,21,12,18,9,15,19,22,3,6,20,25,14,1,23,23,2,25,24,19,21,11,17,4,20,3,16,22,10,1,5,13,7,12,15,18,8,6,14,26,9,9,2,26,24,20,22,6,17,8,13,4,11,1,19,12,5,25,23,7,18,15,14,10,3,21,16,16,11,4,24,21,20,15,5,1,22,2,8,26,6,23,14,3,17,19,25,7,9,13,12,10,18,18,11,14,4,10,24,6,19,8,17,9,26,20,16,23,13,21,1,3,22,15,25,2,12,7,5,5,3,1,24,22,20,14,16,12,4,25,18,13,10,6,9,11,8,7,15,17,21,23,19,26,2,2,4,22,16,15,7,11,18,12,17,10,8,24,23,20,26,21,14,6,3,19,13,5,9,1,25,25,13,16,2,10,4,1,6,5,24,3,26,19,15,21,18,14,8,12,11,9,7,20,17,23,22,22,18,16,25,19,23,21,2,1,10,9,17,12,14,7,3,24,8,4,6,26,5,11,15,13,20,20,18,21,13,11,6,22,25,16,19,14,5,2,7,23,17,15,8,10,12,9,24,1,26,4,3,3,2,9,6,8,5,10,17,13,22,26,23,16,14,11,7,24,4,15,12,1,20,19,18,25,21,21,26,22,19,17,16,18,23,15,11,10,5,4,7,1,13,9,14,12,8,3,25,20,2,6,24,24,2,5,12,6,11,13,15,10,26,25,22,21,19,16,20,23,18,17,14,9,3,7,4,8,1]) -1
    sequences[('t1i1',27)] = array([1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,27,9,2,15,1,16,3,13,26,12,25,11,24,10,23,14,22,8,21,7,20,6,19,5,18,4,17,17,16,2,18,1,14,27,15,3,12,26,11,25,10,24,9,22,13,21,8,20,7,19,6,23,5,4,4,16,5,15,2,17,1,13,27,14,3,11,26,10,25,9,23,8,22,7,21,6,20,12,18,24,19,19,16,4,15,5,17,2,14,1,12,27,13,3,10,26,9,24,8,23,7,22,6,21,11,18,20,25,25,16,6,15,4,18,2,19,1,17,26,13,24,11,23,9,27,10,3,8,5,12,7,14,20,22,21,21,16,7,15,6,17,3,14,26,18,25,12,24,13,23,10,22,11,1,8,27,20,4,2,5,19,9,9,16,8,15,7,17,27,18,26,14,25,19,2,11,3,20,23,12,21,13,1,6,22,10,4,24,5,5,16,9,15,8,17,4,14,2,13,6,11,27,12,23,18,22,19,21,10,20,24,26,25,1,7,3,3,16,10,15,9,17,5,14,4,13,2,20,1,18,6,12,22,24,21,19,23,25,7,27,11,8,26,26,16,11,15,10,17,6,14,5,13,25,18,27,19,24,20,2,9,1,22,3,7,4,23,21,12,8,8,16,12,15,11,17,7,18,3,19,25,14,6,10,27,21,23,13,22,9,26,1,5,2,24,4,20,20,16,13,15,12,17,8,18,5,21,25,22,26,19,27,24,1,10,2,7,23,11,6,4,3,9,14,14,16,15,17,9,19,3,21,1,20,26,22,25,23,2,12,4,8,24,18,7,10,6,27,5,11,13,13,16,14,17,10,19,4,21,26,15,25,20,27,23,1,11,2,22,5,7,24,12,3,18,9,8,6,6,16,18,15,13,19,7,25,27,22,1,21,24,14,23,20,3,26,17,11,4,9,5,8,2,10,12,12,16,19,15,14,21,2,23,26,24,3,22,4,1,9,13,5,27,6,8,25,17,20,10,18,11,7,7,16,20,15,18,17,12,19,8,14,9,21,3,23,27,26,2,1,4,25,6,13,11,10,5,24,22,22,16,21,15,19,17,13,20,5,25,2,27,1,24,7,9,3,6,18,12,11,14,10,8,4,26,23,23,16,22,15,20,17,14,18,8,13,4,12,1,25,3,2,6,24,27,7,5,26,21,9,11,19,10,10,16,23,15,21,17,19,14,7,13,8,12,2,26,3,5,1,27,25,24,6,9,4,11,22,20,18,18,16,24,15,22,17,21,20,9,6,1,3,27,2,25,4,7,26,5,23,19,13,12,10,14,8,11,11,16,25,15,23,22,12,5,3,1,19,26,7,6,2,8,10,9,20,14,13,18,21,4,27,17,24,24,16,26,20,11,5,9,25,13,7,2,4,19,18,10,21,27,8,1,23,17,22,14,12,6,3,15,15,27,4,6,5,10,1,26,8,7,11,9,12,20,19,22,18,13,17,23,3,25,21,14,24,2,16,16,27,3,17,25,8,19,12,9,18,14,11,21,5,20,13,10,7,1,15,24,23,6,26,4,22,2,2,21,18,23,4,10,13,9,7,12,14,19,11,20,8,3,24,17,15,26,6,25,5,22,27,16,1]) -1
    sequences[('t1i1',28)] = array([1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,28,13,8,15,22,1,9,16,23,2,10,17,24,3,11,18,25,4,12,19,26,5,14,20,27,7,6,21,21,1,8,16,22,2,9,15,23,3,10,18,24,4,11,17,25,5,12,20,26,6,13,19,28,7,14,27,27,1,10,15,24,2,8,17,22,3,9,18,23,4,13,16,25,6,11,20,5,7,12,21,26,14,28,19,19,1,11,15,25,2,12,16,24,5,8,18,22,4,9,17,23,6,10,20,28,3,13,26,7,21,27,14,14,1,12,15,26,2,11,16,27,3,8,19,22,5,9,20,23,7,10,21,24,6,17,28,25,18,13,4,4,1,13,15,27,2,14,16,26,3,12,18,5,10,8,20,22,6,9,19,23,11,21,25,7,24,28,17,17,1,14,18,26,4,8,21,23,5,11,19,24,7,9,22,25,3,15,28,2,6,16,10,12,27,13,20,20,1,15,17,26,8,10,16,28,4,14,19,25,9,11,22,24,12,23,18,27,5,21,2,7,13,6,3,3,1,16,18,2,4,10,19,27,6,8,22,26,9,12,24,11,5,13,21,7,15,20,17,14,25,28,23,23,1,17,16,2,5,15,18,28,6,12,22,27,4,20,3,7,11,8,24,26,10,9,25,14,21,19,13,13,1,18,16,3,2,15,21,4,6,14,17,27,8,11,23,22,7,20,9,24,10,26,19,5,28,12,25,25,1,19,16,4,2,13,18,3,5,17,20,6,15,8,23,26,11,9,21,28,10,14,24,27,12,7,22,22,8,12,26,1,3,14,23,25,10,13,24,9,2,16,19,4,7,17,21,5,18,11,28,27,20,15,6,6,1,20,18,4,3,16,21,8,2,17,19,7,5,22,28,9,13,10,23,27,11,14,26,25,24,15,12,12,1,21,16,5,2,18,17,3,6,20,4,15,7,23,8,25,11,10,24,13,27,19,14,22,9,28,26,26,12,8,27,22,10,25,16,1,4,18,6,2,19,9,23,28,5,24,14,3,21,20,13,17,15,11,7,7,1,22,16,6,4,19,2,23,9,8,26,24,17,10,27,25,12,14,13,3,28,18,21,15,5,20,11,11,1,23,16,7,2,20,24,8,3,18,9,26,13,12,28,14,4,21,6,22,17,5,25,27,15,19,10,10,1,24,18,7,3,19,6,23,12,9,27,26,15,13,25,8,4,22,21,17,11,2,28,16,20,14,5,5,1,25,17,2,21,10,3,22,11,13,28,8,6,18,20,7,26,16,9,14,12,4,27,24,23,19,15,15,1,26,18,8,5,19,3,23,10,22,20,25,13,11,4,24,16,14,6,27,17,9,7,28,21,12,2,2,1,27,18,10,4,17,6,5,3,24,19,8,7,25,21,13,23,20,16,12,11,26,28,22,15,14,9,9,1,28,20,2,22,13,5,4,16,11,24,21,3,26,17,12,6,25,19,18,15,10,7,27,23,14,8,8,13,2,24,22,12,17,4,23,21,9,6,28,1,7,18,14,10,5,26,20,19,11,25,15,3,27,16,16,13,7,4,25,20,12,5,23,15,9,3,17,8,14,2,26,22,18,1,6,19,21,11,27,10,28,24,24,20,8,1,5,16,15,2,27,9,4,28,11,3,25,23,17,13,22,14,7,19,12,10,6,26,21,18,18,12,3,20,10,2,25,22,19,17,7,16,8,28,15,4,26,23,13,9,5,27,21,14,11,6,24,1])-1

    # hardcode a standard hemodynamic response function
    EndogenousFilter = array([5.55112e-17,0.00767224,0.0162726,0.025849,0.0364457,0.0481024,0.0608536,0.0747281,0.0897482,0.10593,0.123281,0.141801,0.161484,0.182312,0.204261,0.227297,0.251376,0.276448,0.30245,0.329315,0.356963,0.38531,0.414261,0.443716,0.473569,0.503705,0.534007,0.564352,0.594614,0.624665,0.654374,0.68361,0.712242,0.740139,0.767176,0.793226,0.818169,0.841889,0.864277,0.885229,0.90465,0.922451,0.938554,0.952889,0.965396,0.976025,0.984737,0.991502,0.996304,0.999136,1,0.998913,0.995897,0.990989,0.984232,0.975681,0.965398,0.953452,0.939923,0.924892,0.908452,0.890696,0.871725,0.851641,0.830549,0.808556,0.78577,0.7623,0.738253,0.713734,0.688848,0.663695,0.638375,0.61298,0.5876,0.562319,0.537218,0.51237,0.487844,0.463702,0.44,0.41679,0.394115,0.372016,0.350523,0.329666,0.309467,0.289942,0.271104,0.25296,0.235516,0.218771,0.202721,0.187361,0.172683,0.158674,0.145324,0.132616,0.120536,0.109067,0.0981926,0.0878945,0.0781552,0.0689569,0.0602817,0.0521123,0.0444312,0.0372216,0.0304668,0.0241507,0.0182571,0.0127706,0.00767572,0.00295715,-0.00140033,-0.00541187,-0.00909271,-0.0124583,-0.0155242,-0.0183063,-0.0208208,-0.0230841,-0.025113,-0.0269245,-0.0285358,-0.0299644,-0.0312277,-0.0323428,-0.0333269,-0.0341965,-0.0349674,-0.0356548,-0.0362724,-0.0368327,-0.0373465,-0.0378227,-0.0382678,-0.038686,-0.0390787,-0.0394442,-0.0397777,-0.0400708,-0.0403115,-0.0404842,-0.0405693,-0.0405433,-0.0403786,-0.0400439,-0.039504,-0.0387199,-0.0376493,-0.0362464,-0.0344627,-0.0322468,-0.0295455,-0.0263035,-0.0224645,-0.0179715,-0.0127673,-0.00679528])
    ResolutionHz  = 10                   # resolution to convolve at in Hz
    try:
        nSimMats = SimMat.shape[2]
    except IndexError:
        nSimMats = 1
        
    PSeq=sequences[(par.get('seqtype','t1i1'),par['N'])]

    p=max(PSeq)-min(PSeq);

    if par['doubleblanks']:
        blanksinseq = sum(PSeq==0)
    else:
        blanksinseq = 0

    # Load the Endogenous Filter
    EndoLength=(PSeq.size - 1 + blanksinseq) * par['TrialDuration'] * ResolutionHz
    EndogenousFilter=hstack((EndogenousFilter, array(zeros((EndoLength-EndogenousFilter.size))).T.flatten(1)))
    EndogenousFilter=NormMag(mncn(EndogenousFilter))
    EndogenousKernel=fft(EndogenousFilter)
    EndogenousKernel[0]=1   # set DC component to pin amplitude
    EndogenousKernel.resize(EndogenousKernel.size,1)
    
    # NOW THE REAL WORK BEGINS

    alleffs=zeros((nSimMats,par['perms']))
    allseqs=zeros((PSeq.size+blanksinseq,par['perms']))
    maxE=0

    # create a place to put the permed pseq
    PermedPSeq=zeros((PSeq.size,1))

    for Perm in xrange(par['perms']):
            
        while True:
            Relabel=random.permutation(p+1)
            if Relabel[0] != 0:
                break

        # iterate through all the values and put the new value
        # in as assigned by relabel in the spot indicated by PSeq
        for i in range(p+1):
            PermedPSeq[PSeq==i]=Relabel[i]

        # set the blank trials to zero and expand
        if par['doubleblanks']:
            QSeq = array([],dtype=int)
            m = {0: blanks}
            for i in PermedPSeq:
                QSeq = append(QSeq,(m.get(int(i),[int(i)])))
        else:
            QSeq = array(PermedPSeq,dtype=int).flatten()
        
        NewLength=QSeq.size - 1  # differences vector is 1 smaller
        FullVec = zeros((NewLength,nSimMats))
    
        for j in range(NewLength):
            # NO elements in QSeq(j:j+1) may be zero or target
            if ((0 not in QSeq[j:j+2]) and (par['target'] not in QSeq[j:j+2])):
                FullVec[j,:] = SimMat[QSeq[j]-1,QSeq[j+1]-1,:]
        
            if QSeq[j] == QSeq[j+1] or QSeq[j] == 0 or QSeq[j+1] == 0 or QSeq[j] == par['target']:
                FullVec[j,:] = -999

        FullVec[FullVec==-999] = 0

        
        # individually mean center
        for n in range(nSimMats):
            if mathrange(FullVec[:,n]) != 1:
                FullVec[:,n]=mncnleavezeros(FullVec[:,n])

        Vec=congrid(FullVec,FullVec.shape[0] * par['TrialDuration'] * ResolutionHz)
                
        FiltVec = ifft(fft(Vec,axis=0) * repmat(EndogenousKernel,(1,nSimMats)),axis=0)
        
        E = sum(FiltVec**2,axis=0) / sum(Vec**2,axis=0)
        alleffs[:,Perm] = real(E)
        allseqs[:,Perm] = QSeq
    
        BestVec = None
        if eucsum(E.T) > maxE:
            maxE = eucsum(E.T)
            maxeffidx = Perm
            BestVec = Vec
            BestFiltVec = FiltVec
#            print 'new best: ssqE %0.2f\t' % maxE,
#            for x in E:
#                print '%0.2f ' % x,
#            print
#        
#        if mod(Perm,1000) == 0:
#            print '--- (%2.0f%% done) ---' % floor(100 * Perm / par['perms'])
    


    sumofeffs = eucsum(alleffs)
    zipeffs = zip(sumofeffs,range(sumofeffs.size))
    sortedsumofeffs_index = [x[1] for x in sorted(zipeffs)]
    
    result = {}
    result['BestVec'] = BestVec
    result['bestEs'] = alleffs[:,sortedsumofeffs_index[-par['numSeqs']:]]
    result['BestSeqs'] = allseqs[:,sortedsumofeffs_index[-par['numSeqs']:]]
#    print 'Best was found on permutation %d of %d\n' % (maxeffidx,Perm)
    return result
    
if __name__ == '__main__':
    print "Content-Type: text/html"     # HTML is following
    print                               # blank line, end of headers

    form = cgi.FieldStorage()
    
    if form.getvalue('source'):
        code = open('evalseqshard.py','rU').read()
        print '<html><head><style type="text/css">'
        print HtmlFormatter().get_style_defs('.highlight')
        print '</style></head><body>'
        print highlight(code, PythonLexer(), HtmlFormatter())
        print '</body></html>'
        sys.exit()
        
    par = {}
    try:
        par['perms'] = int(form['perms'].value)
        par['doubleblanks'] = bool(int(form['doubleblanks'].value))
        par['seqtype'] = form['seqtype'].value
        par['target'] = bool(int(form['target'].value))
        par['TrialDuration'] = float(form['TrialDuration'].value)
        par['numSeqs'] = int(form['numSeqs'].value)
    except KeyError:
        print "something went wrong, didn't get needed fields"
        sys.exit()
        
    if form['email'].value != '':
        file = open('visitors.txt','aU')
        file.write(str(datetime.datetime.now()) + ' ' + form['email'].value + '\n')
    
    sep=re.compile('[;,]')
    simvec = []

    for k in range(3):
        input = form['simvec' + str(k)].value
        if sep.search(input):
            simvec.append([float(i) for i in sep.split(input)])
    
    xy = vec2sim(array(simvec[0])).shape[0] 
    SimMat=ones((xy,xy,len(simvec)))
    
    if par['target']:
        par['target'] = xy + 1
        par['N'] = xy + 2
    else:
        par['target'] = 0
        par['N'] = xy + 1
    

    
    for i in range(len(simvec)):
        SimMat[:,:,i]=vec2sim(array(simvec[i]))

    print "<title>Sequence Evaluator Output</title>"
    print "<h1>Sequence Evaluator Output</h1>"
    print "<h2>your inputs</h2><small>"
    print 'parameters: ' , par
    print '<p>'
    print 'similarity vectors:' , simvec
    print "</small><hr><h2>our outputs</h2>"
    result = EvaluateSeqshard(par,SimMat)
    for seqnum in reversed(range(result['bestEs'].shape[1])):
        print "sequence %d: " % (result['bestEs'].shape[1] - seqnum)
        print ', '.join(map(str,[int(i) for i in result['BestSeqs'][:,seqnum]]))
        print '<br>'
        print "Efficiency: %0.2f" % result['bestEs'][0,seqnum]
        print '<p>'
    
